{"ast":null,"code":"export const checkImage = file => {\n  let err = \"\";\n  if (!file) {\n    return err = \"File does not exist.\";\n  }\n  //?1 mb\n  if (file.size > 1024 * 1024) {\n    return err = \"File size must be less than 1 Mb.\";\n  }\n  if (file.type !== 'image/jpeg' && file.type !== 'image/png') {\n    return err = \"Image must be jpeg or png.\";\n  }\n  return err;\n};\nexport const imageUpload = async images => {\n  let imgArr = [];\n  for (const item of images) {\n    const formData = new FormData();\n    if (item.camera) {\n      formData.append(\"file\", item.camera);\n    } else {\n      formData.append(\"file\", item);\n    }\n    formData.append(\"upload_preset\", \"dn2d0cvkd\");\n    formData.append(\"cloud_name\", \"GIxReOySjTvTCIJxN1Ge7Ze-GM4\");\n    const res = await fetch(\"http://localhost:8080/api/upload-image\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await res.json();\n    imgArr.push({\n      public_id: data.public_id,\n      url: data.secure_url\n    });\n  }\n  return imgArr;\n};","map":{"version":3,"names":["checkImage","file","err","size","type","imageUpload","images","imgArr","item","formData","FormData","camera","append","res","fetch","method","body","data","json","push","public_id","url","secure_url"],"sources":["C:/Users/Dell/Desktop/sem3/friends/frontend/src/utils/imageUpload.js"],"sourcesContent":["export const checkImage = (file) => {\n    let err = \"\";\n    if(!file){\n        return err = \"File does not exist.\";\n    }\n//?1 mb\n    if(file.size > 1024 * 1024){\n         return (err = \"File size must be less than 1 Mb.\");\n    }\n\n    if (file.type !== 'image/jpeg' && file.type !== 'image/png') {\n      return (err = \"Image must be jpeg or png.\");\n    }\n\n    return err;\n}\n\nexport const imageUpload = async (images) => {\n    let imgArr = [];\n    for(const item of images){\n        const formData = new FormData();\n\n        if(item.camera){\n            formData.append(\"file\", item.camera);\n        }else{\n            formData.append(\"file\", item);  \n        }\n\n        \n        formData.append(\"upload_preset\", \"dn2d0cvkd\");\n        formData.append(\"cloud_name\", \"GIxReOySjTvTCIJxN1Ge7Ze-GM4\");\n\n        const res = await fetch(\"http://localhost:8080/api/upload-image\", {\n            method: \"POST\",\n            body: formData\n        })\n\n        const data = await res.json();\n        imgArr.push({ public_id: data.public_id, url: data.secure_url });\n        \n      \n    }\n    return imgArr;\n}"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAIC,IAAI,IAAK;EAChC,IAAIC,GAAG,GAAG,EAAE;EACZ,IAAG,CAACD,IAAI,EAAC;IACL,OAAOC,GAAG,GAAG,sBAAsB;EACvC;EACJ;EACI,IAAGD,IAAI,CAACE,IAAI,GAAG,IAAI,GAAG,IAAI,EAAC;IACtB,OAAQD,GAAG,GAAG,mCAAmC;EACtD;EAEA,IAAID,IAAI,CAACG,IAAI,KAAK,YAAY,IAAIH,IAAI,CAACG,IAAI,KAAK,WAAW,EAAE;IAC3D,OAAQF,GAAG,GAAG,4BAA4B;EAC5C;EAEA,OAAOA,GAAG;AACd,CAAC;AAED,OAAO,MAAMG,WAAW,GAAG,MAAOC,MAAM,IAAK;EACzC,IAAIC,MAAM,GAAG,EAAE;EACf,KAAI,MAAMC,IAAI,IAAIF,MAAM,EAAC;IACrB,MAAMG,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAE/B,IAAGF,IAAI,CAACG,MAAM,EAAC;MACXF,QAAQ,CAACG,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAACG,MAAM,CAAC;IACxC,CAAC,MAAI;MACDF,QAAQ,CAACG,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAAC;IACjC;IAGAC,QAAQ,CAACG,MAAM,CAAC,eAAe,EAAE,WAAW,CAAC;IAC7CH,QAAQ,CAACG,MAAM,CAAC,YAAY,EAAE,6BAA6B,CAAC;IAE5D,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;MAC9DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEP;IACV,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;IAC7BX,MAAM,CAACY,IAAI,CAAC;MAAEC,SAAS,EAAEH,IAAI,CAACG,SAAS;MAAEC,GAAG,EAAEJ,IAAI,CAACK;IAAW,CAAC,CAAC;EAGpE;EACA,OAAOf,MAAM;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}