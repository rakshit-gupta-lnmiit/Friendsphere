{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\sem3\\\\friends\\\\frontend\\\\src\\\\SocketClient.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { POST_TYPES } from \"./redux/actions/postAction\";\nimport { ADMIN_TYPES } from \"./redux/actions/adminAction\";\nimport { GLOBALTYPES } from \"./redux/actions/globalTypes\";\nimport { NOTIFY_TYPES } from \"./redux/actions/notifyAction\";\nimport { MESSAGE_TYPES } from \"./redux/actions/messageAction\";\nimport audioTone from './audio/pristine-609.mp3';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst spawnNotification = (body, icon, url, title) => {\n  let options = {\n    body,\n    icon\n  };\n  let n = new Notification(title, options);\n  n.onclick = e => {\n    e.preventDefault();\n    window.open(url, '_blank');\n  };\n};\nconst SocketClient = () => {\n  _s();\n  const {\n    auth,\n    socket,\n    notify\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const audioRef = useRef();\n\n  //!connection\n  useEffect(() => {\n    if (auth.user.role === \"user\") {\n      socket.emit(\"joinUser\", auth.user._id);\n    } else if (auth.user.role === \"admin\") {\n      socket.emit(\"joinAdmin\", auth.user._id);\n    }\n  }, [socket, auth.user.role, auth.user._id]);\n  useEffect(() => {\n    socket.on(\"getActiveUsersToClient\", totalActiveUsers => {\n      dispatch({\n        type: ADMIN_TYPES.GET_TOTAL_ACTIVE_USERS,\n        payload: totalActiveUsers\n      });\n    });\n    return () => socket.off(\"getActiveUsersToClient\");\n  }, [socket, dispatch]);\n\n  //!like Post\n  useEffect(() => {\n    socket.on(\"likeToClient\", newPost => {\n      dispatch({\n        type: POST_TYPES.UPDATE_POST,\n        payload: newPost\n      });\n    });\n    return () => socket.off(\"likeToClient\");\n  }, [socket, dispatch]);\n\n  //!Unlike Post\n  useEffect(() => {\n    socket.on(\"unLikeToClient\", newPost => {\n      dispatch({\n        type: POST_TYPES.UPDATE_POST,\n        payload: newPost\n      });\n    });\n    return () => socket.off(\"unLikeToClient\");\n  }, [socket, dispatch]);\n\n  //!Comments\n  useEffect(() => {\n    socket.on(\"createCommentToClient\", newPost => {\n      dispatch({\n        type: POST_TYPES.UPDATE_POST,\n        payload: newPost\n      });\n    });\n    return () => socket.off(\"createCommentToClient\");\n  }, [socket, dispatch]);\n  useEffect(() => {\n    socket.on(\"deleteCommentToClient\", newPost => {\n      dispatch({\n        type: POST_TYPES.UPDATE_POST,\n        payload: newPost\n      });\n    });\n    return () => socket.off(\"deleteCommentToClient\");\n  }, [socket, dispatch]);\n\n  //!Follow\n  useEffect(() => {\n    socket.on(\"followToClient\", newUser => {\n      dispatch({\n        type: GLOBALTYPES.AUTH,\n        payload: {\n          ...auth,\n          user: newUser\n        }\n      });\n    });\n    return () => socket.off(\"followToClient\");\n  }, [socket, dispatch, auth]);\n  useEffect(() => {\n    socket.on(\"unFollowToClient\", newUser => {\n      dispatch({\n        type: GLOBALTYPES.AUTH,\n        payload: {\n          ...auth,\n          user: newUser\n        }\n      });\n    });\n    return () => socket.off(\"unFollowToClient\");\n  }, [socket, dispatch, auth]);\n\n  //!Notifications\n  useEffect(() => {\n    socket.on(\"createNotifyToClient\", msg => {\n      dispatch({\n        type: NOTIFY_TYPES.CREATE_NOTIFY,\n        payload: msg\n      });\n      if (notify.sound) {\n        audioRef.current.play();\n      }\n      spawnNotification(msg.user.username + \" \" + msg.text, msg.user.avatar, msg.url, \"CAMPUS CONNECT\");\n    });\n    return () => socket.off(\"createNotifyToClient\");\n  }, [socket, dispatch, notify.sound]);\n  useEffect(() => {\n    socket.on(\"removeNotifyToClient\", msg => {\n      dispatch({\n        type: NOTIFY_TYPES.REMOVE_NOTIFY,\n        payload: msg\n      });\n    });\n    return () => socket.off(\"removeNotifyToClient\");\n  }, [socket, dispatch]);\n\n  //!Messages\n  useEffect(() => {\n    socket.on(\"addMessageToClient\", msg => {\n      dispatch({\n        type: MESSAGE_TYPES.ADD_MESSAGE,\n        payload: msg\n      });\n    });\n    return () => socket.off(\"addMessageToClient\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      ref: audioRef,\n      style: {\n        display: \"none\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: audioTone,\n        type: \"audio/mp3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(SocketClient, \"73xmQjRVcTE9KoqDu+sbC6f1AVU=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = SocketClient;\nexport default SocketClient;\nvar _c;\n$RefreshReg$(_c, \"SocketClient\");","map":{"version":3,"names":["React","useEffect","useRef","useDispatch","useSelector","POST_TYPES","ADMIN_TYPES","GLOBALTYPES","NOTIFY_TYPES","MESSAGE_TYPES","audioTone","jsxDEV","_jsxDEV","Fragment","_Fragment","spawnNotification","body","icon","url","title","options","n","Notification","onclick","e","preventDefault","window","open","SocketClient","_s","auth","socket","notify","state","dispatch","audioRef","user","role","emit","_id","on","totalActiveUsers","type","GET_TOTAL_ACTIVE_USERS","payload","off","newPost","UPDATE_POST","newUser","AUTH","msg","CREATE_NOTIFY","sound","current","play","username","text","avatar","REMOVE_NOTIFY","ADD_MESSAGE","children","controls","ref","style","display","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/sem3/friends/frontend/src/SocketClient.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { POST_TYPES } from \"./redux/actions/postAction\";\r\nimport { ADMIN_TYPES } from \"./redux/actions/adminAction\";\r\nimport { GLOBALTYPES } from \"./redux/actions/globalTypes\";\r\nimport { NOTIFY_TYPES } from \"./redux/actions/notifyAction\";\r\nimport { MESSAGE_TYPES } from \"./redux/actions/messageAction\";\r\n\r\nimport audioTone from './audio/pristine-609.mp3' \r\n\r\nconst spawnNotification = (body, icon, url, title) => {\r\n  let options = {\r\n    body, icon\r\n  }\r\n  let n = new Notification(title, options);\r\n  n.onclick =  e => {\r\n    e.preventDefault();\r\n    window.open(url, '_blank');\r\n  }\r\n}\r\n\r\nconst SocketClient = () => {\r\n  const { auth, socket, notify } = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const audioRef = useRef();\r\n\r\n  //!connection\r\n  useEffect(() => {\r\n    if (auth.user.role === \"user\") {\r\n      socket.emit(\"joinUser\", auth.user._id);\r\n    } else if (auth.user.role === \"admin\") {\r\n      socket.emit(\"joinAdmin\", auth.user._id);\r\n    }\r\n  }, [socket, auth.user.role, auth.user._id]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"getActiveUsersToClient\", (totalActiveUsers) => {\r\n      dispatch({\r\n        type: ADMIN_TYPES.GET_TOTAL_ACTIVE_USERS,\r\n        payload: totalActiveUsers,\r\n      });\r\n    });\r\n    return () => socket.off(\"getActiveUsersToClient\");\r\n  }, [socket, dispatch]);\r\n\r\n  //!like Post\r\n  useEffect(() => {\r\n    socket.on(\"likeToClient\", (newPost) => {\r\n      dispatch({ type: POST_TYPES.UPDATE_POST, payload: newPost });\r\n    });\r\n    return () => socket.off(\"likeToClient\");\r\n  }, [socket, dispatch]);\r\n\r\n  //!Unlike Post\r\n  useEffect(() => {\r\n    socket.on(\"unLikeToClient\", (newPost) => {\r\n      dispatch({ type: POST_TYPES.UPDATE_POST, payload: newPost });\r\n    });\r\n    return () => socket.off(\"unLikeToClient\");\r\n  }, [socket, dispatch]);\r\n\r\n  //!Comments\r\n  useEffect(() => {\r\n    socket.on(\"createCommentToClient\", (newPost) => {\r\n      dispatch({ type: POST_TYPES.UPDATE_POST, payload: newPost });\r\n    });\r\n    return () => socket.off(\"createCommentToClient\");\r\n  }, [socket, dispatch]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"deleteCommentToClient\", (newPost) => {\r\n      dispatch({ type: POST_TYPES.UPDATE_POST, payload: newPost });\r\n    });\r\n    return () => socket.off(\"deleteCommentToClient\");\r\n  }, [socket, dispatch]);\r\n\r\n  //!Follow\r\n  useEffect(() => {\r\n    socket.on(\"followToClient\", (newUser) => {\r\n      dispatch({ type: GLOBALTYPES.AUTH, payload: { ...auth, user: newUser } });\r\n    });\r\n    return () => socket.off(\"followToClient\");\r\n  }, [socket, dispatch, auth]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"unFollowToClient\", (newUser) => {\r\n      dispatch({\r\n        type: GLOBALTYPES.AUTH,\r\n        payload: { ...auth, user: newUser },\r\n      });\r\n    });\r\n    return () => socket.off(\"unFollowToClient\");\r\n  }, [socket, dispatch, auth]);\r\n\r\n  //!Notifications\r\n  useEffect(() => {\r\n    socket.on(\"createNotifyToClient\", (msg) => {\r\n      dispatch({ type: NOTIFY_TYPES.CREATE_NOTIFY, payload: msg });\r\n\r\n      if (notify.sound) {\r\n        audioRef.current.play();\r\n      }\r\n      spawnNotification(\r\n        msg.user.username + \" \" + msg.text,\r\n        msg.user.avatar,\r\n        msg.url,\r\n        \"CAMPUS CONNECT\"\r\n      );\r\n    });\r\n    return () => socket.off(\"createNotifyToClient\");\r\n  }, [socket, dispatch, notify.sound]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"removeNotifyToClient\", (msg) => {\r\n      dispatch({ type: NOTIFY_TYPES.REMOVE_NOTIFY, payload: msg });\r\n    });\r\n    return () => socket.off(\"removeNotifyToClient\");\r\n  }, [socket, dispatch]);\r\n\r\n  //!Messages\r\n  useEffect(() => {\r\n    socket.on(\"addMessageToClient\", (msg) => {\r\n      dispatch({ type: MESSAGE_TYPES.ADD_MESSAGE, payload: msg });\r\n\r\n    });\r\n    return () => socket.off(\"addMessageToClient\");\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <audio controls ref={audioRef} style={{ display: \"none\" }}>\r\n        <source src={audioTone} type=\"audio/mp3\" />\r\n      </audio>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SocketClient;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}