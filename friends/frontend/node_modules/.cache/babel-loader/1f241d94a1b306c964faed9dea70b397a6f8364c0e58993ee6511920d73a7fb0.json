{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\sem3\\\\friends\\\\frontend\\\\src\\\\components\\\\message\\\\LeftSide.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { GLOBALTYPES } from '../../redux/actions/globalTypes';\nimport { addUser, getConversations } from \"../../redux/actions/messageAction\";\nimport { getDataAPI } from '../../utils/fetchData';\nimport UserCard from \"../UserCard\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LeftSide = () => {\n  _s();\n  const {\n    auth,\n    message\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const pageEnd = useRef();\n  const [page, setPage] = useState(0);\n  const [search, setSearch] = useState(''); // Initialize search state\n  const [searchUsers, setSearchUsers] = useState([]);\n\n  // Fetch all conversations and users on initial load\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const res = await getDataAPI('search?username=', auth.token); // Fetch all users with empty search\n        setSearchUsers(res.data.users); // Set initial users\n        dispatch(getConversations({\n          auth\n        })); // Fetch conversations\n      } catch (err) {\n        dispatch({\n          type: GLOBALTYPES.ALERT,\n          payload: {\n            error: err.response.data.msg\n          }\n        });\n      }\n    };\n    fetchUsers();\n  }, [dispatch, auth]);\n\n  // Search functionality\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (!search) {\n      // If search is empty, fetch all users again\n      try {\n        const res = await getDataAPI('search?username=', auth.token);\n        setSearchUsers(res.data.users);\n      } catch (err) {\n        dispatch({\n          type: GLOBALTYPES.ALERT,\n          payload: {\n            error: err.response.data.msg\n          }\n        });\n      }\n      return;\n    }\n\n    // Search for users based on the input\n    try {\n      const res = await getDataAPI(`search?username=${search}`, auth.token);\n      setSearchUsers(res.data.users);\n    } catch (err) {\n      dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {\n          error: err.response.data.msg\n        }\n      });\n    }\n  };\n  const handleAddUser = user => {\n    setSearch('');\n    setSearchUsers([]);\n    dispatch(addUser({\n      user,\n      message\n    }));\n    return history.push(`/message/${user._id}`);\n  };\n  const isActive = user => {\n    if (id === user._id) return 'active';\n    return '';\n  };\n\n  // Load more conversations when scrolling down\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        setPage(p => p + 1);\n      }\n    }, {\n      threshold: 0.1\n    });\n    observer.observe(pageEnd.current);\n  }, [setPage]);\n  useEffect(() => {\n    if (message.resultUsers >= (page - 1) * 9 && page > 1) {\n      dispatch(getConversations({\n        auth,\n        page\n      }));\n    }\n  }, [message.resultUsers, page, auth, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"message_header\",\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: search,\n        onChange: e => setSearch(e.target.value),\n        placeholder: \"search...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          display: \"none\"\n        },\n        type: \"submit\",\n        id: \"search\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message_chat_list\",\n      children: [searchUsers.length !== 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: searchUsers.map(user => user.hasOwnProperty('avatar') &&\n        /*#__PURE__*/\n        // Check for avatar property\n        _jsxDEV(\"div\", {\n          className: `message_user ${isActive(user)}`,\n          onClick: () => handleAddUser(user),\n          children: /*#__PURE__*/_jsxDEV(UserCard, {\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 37\n          }, this)\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 33\n        }, this))\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: message.users.map(user => user.hasOwnProperty('avatar') &&\n        /*#__PURE__*/\n        // Check for avatar property\n        _jsxDEV(\"div\", {\n          className: `message_user ${isActive(user)}`,\n          onClick: () => handleAddUser(user),\n          children: /*#__PURE__*/_jsxDEV(UserCard, {\n            user: user,\n            msg: true,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 37\n          }, this)\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 33\n        }, this))\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          opacity: 0\n        },\n        ref: pageEnd,\n        children: \"Load more..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(LeftSide, \"RphzRHe6pRVcNPQ1xKYM5ny2WGg=\", false, function () {\n  return [useSelector, useDispatch, useHistory, useParams];\n});\n_c = LeftSide;\nexport default LeftSide;\nvar _c;\n$RefreshReg$(_c, \"LeftSide\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useDispatch","useSelector","useHistory","useParams","GLOBALTYPES","addUser","getConversations","getDataAPI","UserCard","jsxDEV","_jsxDEV","Fragment","_Fragment","LeftSide","_s","auth","message","state","dispatch","history","id","pageEnd","page","setPage","search","setSearch","searchUsers","setSearchUsers","fetchUsers","res","token","data","users","err","type","ALERT","payload","error","response","msg","handleSearch","e","preventDefault","handleAddUser","user","push","_id","isActive","observer","IntersectionObserver","entries","isIntersecting","p","threshold","observe","current","resultUsers","children","className","onSubmit","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","style","display","length","map","hasOwnProperty","onClick","opacity","ref","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/sem3/friends/frontend/src/components/message/LeftSide.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { GLOBALTYPES } from '../../redux/actions/globalTypes';\r\nimport { addUser, getConversations } from \"../../redux/actions/messageAction\";\r\nimport { getDataAPI } from '../../utils/fetchData';\r\nimport UserCard from \"../UserCard\";\r\n\r\nconst LeftSide = () => {\r\n    const { auth, message } = useSelector((state) => state);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory(); \r\n    const { id } = useParams();\r\n    const pageEnd = useRef();\r\n    const [page, setPage] = useState(0);\r\n    const [search, setSearch] = useState('');  // Initialize search state\r\n    const [searchUsers, setSearchUsers] = useState([]);\r\n\r\n    // Fetch all conversations and users on initial load\r\n    useEffect(() => {\r\n        const fetchUsers = async () => {\r\n            try {\r\n                const res = await getDataAPI('search?username=', auth.token); // Fetch all users with empty search\r\n                setSearchUsers(res.data.users); // Set initial users\r\n                dispatch(getConversations({ auth })); // Fetch conversations\r\n            } catch (err) {\r\n                dispatch({\r\n                    type: GLOBALTYPES.ALERT,\r\n                    payload: { error: err.response.data.msg },\r\n                });\r\n            }\r\n        };\r\n\r\n        fetchUsers();\r\n    }, [dispatch, auth]);\r\n\r\n    // Search functionality\r\n    const handleSearch = async (e) => {\r\n        e.preventDefault();\r\n        if (!search) {\r\n            // If search is empty, fetch all users again\r\n            try {\r\n                const res = await getDataAPI('search?username=', auth.token);\r\n                setSearchUsers(res.data.users);\r\n            } catch (err) {\r\n                dispatch({\r\n                    type: GLOBALTYPES.ALERT,\r\n                    payload: { error: err.response.data.msg },\r\n                });\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Search for users based on the input\r\n        try {\r\n            const res = await getDataAPI(`search?username=${search}`, auth.token);\r\n            setSearchUsers(res.data.users);\r\n        } catch (err) {\r\n            dispatch({\r\n                type: GLOBALTYPES.ALERT,\r\n                payload: { error: err.response.data.msg },\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleAddUser = (user) => {\r\n        setSearch('');\r\n        setSearchUsers([]);\r\n        dispatch(addUser({ user, message }));\r\n        return history.push(`/message/${user._id}`);\r\n    };\r\n\r\n    const isActive = (user) => {\r\n        if (id === user._id) return 'active';\r\n        return '';\r\n    }\r\n\r\n    // Load more conversations when scrolling down\r\n    useEffect(() => {\r\n        const observer = new IntersectionObserver(\r\n            (entries) => {\r\n                if (entries[0].isIntersecting) {\r\n                    setPage((p) => p + 1);\r\n                }\r\n            },\r\n            {\r\n                threshold: 0.1,\r\n            }\r\n        );\r\n        observer.observe(pageEnd.current);\r\n    }, [setPage]);\r\n\r\n    useEffect(() => {\r\n        if (message.resultUsers >= (page - 1) * 9 && page > 1) {\r\n            dispatch(getConversations({ auth, page }));\r\n        }\r\n    }, [message.resultUsers, page, auth, dispatch]);\r\n\r\n    return (\r\n        <>\r\n            <form className=\"message_header\" onSubmit={handleSearch}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={search}\r\n                    onChange={(e) => setSearch(e.target.value)}\r\n                    placeholder=\"search...\"\r\n                />\r\n                <button style={{ display: \"none\" }} type=\"submit\" id=\"search\">\r\n                    Search\r\n                </button>\r\n            </form>\r\n\r\n            <div className=\"message_chat_list\">\r\n                {searchUsers.length !== 0 ? (\r\n                    <>\r\n                        {searchUsers.map((user) => (\r\n                            user.hasOwnProperty('avatar') && ( // Check for avatar property\r\n                                <div\r\n                                    key={user._id}\r\n                                    className={`message_user ${isActive(user)}`}\r\n                                    onClick={() => handleAddUser(user)}\r\n                                >\r\n                                    <UserCard user={user} />\r\n                                </div>\r\n                            )\r\n                        ))}\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        {message.users.map((user) => (\r\n                            user.hasOwnProperty('avatar') && ( // Check for avatar property\r\n                                <div\r\n                                    key={user._id}\r\n                                    className={`message_user ${isActive(user)}`}\r\n                                    onClick={() => handleAddUser(user)}\r\n                                >\r\n                                    <UserCard user={user} msg={true}>\r\n                                        <i className=\"fas fa-circle\" />\r\n                                    </UserCard>\r\n                                </div>\r\n                            )\r\n                        ))}\r\n                    </>\r\n                )}\r\n                <button style={{ opacity: 0 }} ref={pageEnd}>Load more..</button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LeftSide;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}