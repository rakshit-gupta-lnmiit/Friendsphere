{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\sem3\\\\friends\\\\frontend\\\\src\\\\pages\\\\discover.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDiscoverPosts, DISCOVER_TYPES } from \"../redux/actions/discoverAction\";\nimport LoadIcon from '../images/loading.gif';\nimport PostThumb from \"../components/PostThumb\";\nimport LoadMoreBtn from '../components/LoadMoreBtn';\nimport { getDataAPI } from '../utils/fetchData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Discover = () => {\n  _s();\n  const {\n    auth,\n    discover\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const [load, setLoad] = useState(false);\n  useEffect(() => {\n    if (!discover.firstLoad) {\n      dispatch(getDiscoverPosts(auth.token));\n    }\n  }, [dispatch, auth.token, discover.firstLoad]);\n  const handleLoadMore = async () => {\n    setLoad(true);\n    const res = await getDataAPI(`post_discover?num=${discover.page * 8}`, auth.token);\n    dispatch({\n      type: DISCOVER_TYPES.UPDATE_POSTS,\n      payload: res.data\n    });\n    setLoad(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [discover.loading ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: LoadIcon,\n      alt: \"Loading...\",\n      className: \"d-block mx-auto my-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(PostThumb, {\n      posts: discover.posts,\n      result: discover.result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), load && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: LoadIcon,\n      alt: \"Loading...\",\n      className: \"d-block mx-auto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this), !discover.loading && /*#__PURE__*/_jsxDEV(LoadMoreBtn, {\n      result: discover.result,\n      page: discover.page,\n      load: load,\n      handleLoadMore: handleLoadMore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n};\n_s(Discover, \"/cHGK1pV8tSUJQu3cnKvqVeQ8vY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Discover;\nexport default Discover;\nvar _c;\n$RefreshReg$(_c, \"Discover\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","getDiscoverPosts","DISCOVER_TYPES","LoadIcon","PostThumb","LoadMoreBtn","getDataAPI","jsxDEV","_jsxDEV","Discover","_s","auth","discover","state","dispatch","load","setLoad","firstLoad","token","handleLoadMore","res","page","type","UPDATE_POSTS","payload","data","children","loading","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","posts","result","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/sem3/friends/frontend/src/pages/discover.js"],"sourcesContent":["import React, { useState, useEffect} from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDiscoverPosts, DISCOVER_TYPES } from \"../redux/actions/discoverAction\";\nimport LoadIcon from '../images/loading.gif';\nimport PostThumb from \"../components/PostThumb\";\nimport LoadMoreBtn from '../components/LoadMoreBtn';\nimport { getDataAPI } from '../utils/fetchData';\n\nconst Discover = () => {\n    const { auth, discover } = useSelector(state => state);\n    const dispatch = useDispatch();\n\n    const [load, setLoad] = useState(false);\n\n    useEffect(() => {\n      if (!discover.firstLoad) {\n        dispatch(getDiscoverPosts(auth.token));\n      }\n    }, [dispatch, auth.token, discover.firstLoad]);\n\n    const handleLoadMore = async () => {\n        setLoad(true);\n        const res = await getDataAPI(`post_discover?num=${discover.page * 8}`, auth.token);\n        dispatch({ type: DISCOVER_TYPES.UPDATE_POSTS, payload: res.data });\n        setLoad(false);\n    };\n\n    return (\n      <div>\n        {discover.loading ? (\n          <img\n            src={LoadIcon}\n            alt=\"Loading...\"\n            className=\"d-block mx-auto my-4\"\n          />\n        ) : (\n            <PostThumb posts={discover.posts} result={discover.result} />\n          \n        )}\n\n        {load && (\n          <img src={LoadIcon} alt=\"Loading...\" className=\"d-block mx-auto\" />\n        )}\n\n        {!discover.loading && (\n          <LoadMoreBtn\n            result={discover.result}\n            page={discover.page}\n            load={load}\n            handleLoadMore={handleLoadMore}\n          />\n        )}\n      </div>\n    );\n}\n\nexport default Discover;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACjD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,gBAAgB,EAAEC,cAAc,QAAQ,iCAAiC;AAClF,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,UAAU,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC,IAAI;IAAEC;EAAS,CAAC,GAAGZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAAC;EACtD,MAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAEvCC,SAAS,CAAC,MAAM;IACd,IAAI,CAACc,QAAQ,CAACK,SAAS,EAAE;MACvBH,QAAQ,CAACb,gBAAgB,CAACU,IAAI,CAACO,KAAK,CAAC,CAAC;IACxC;EACF,CAAC,EAAE,CAACJ,QAAQ,EAAEH,IAAI,CAACO,KAAK,EAAEN,QAAQ,CAACK,SAAS,CAAC,CAAC;EAE9C,MAAME,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/BH,OAAO,CAAC,IAAI,CAAC;IACb,MAAMI,GAAG,GAAG,MAAMd,UAAU,CAAC,qBAAqBM,QAAQ,CAACS,IAAI,GAAG,CAAC,EAAE,EAAEV,IAAI,CAACO,KAAK,CAAC;IAClFJ,QAAQ,CAAC;MAAEQ,IAAI,EAAEpB,cAAc,CAACqB,YAAY;MAAEC,OAAO,EAAEJ,GAAG,CAACK;IAAK,CAAC,CAAC;IAClET,OAAO,CAAC,KAAK,CAAC;EAClB,CAAC;EAED,oBACER,OAAA;IAAAkB,QAAA,GACGd,QAAQ,CAACe,OAAO,gBACfnB,OAAA;MACEoB,GAAG,EAAEzB,QAAS;MACd0B,GAAG,EAAC,YAAY;MAChBC,SAAS,EAAC;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,gBAEA1B,OAAA,CAACJ,SAAS;MAAC+B,KAAK,EAAEvB,QAAQ,CAACuB,KAAM;MAACC,MAAM,EAAExB,QAAQ,CAACwB;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAE/D,EAEAnB,IAAI,iBACHP,OAAA;MAAKoB,GAAG,EAAEzB,QAAS;MAAC0B,GAAG,EAAC,YAAY;MAACC,SAAS,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACnE,EAEA,CAACtB,QAAQ,CAACe,OAAO,iBAChBnB,OAAA,CAACH,WAAW;MACV+B,MAAM,EAAExB,QAAQ,CAACwB,MAAO;MACxBf,IAAI,EAAET,QAAQ,CAACS,IAAK;MACpBN,IAAI,EAAEA,IAAK;MACXI,cAAc,EAAEA;IAAe;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEZ,CAAC;AAAAxB,EAAA,CA9CKD,QAAQ;EAAA,QACiBT,WAAW,EACrBD,WAAW;AAAA;AAAAsC,EAAA,GAF1B5B,QAAQ;AAgDd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}