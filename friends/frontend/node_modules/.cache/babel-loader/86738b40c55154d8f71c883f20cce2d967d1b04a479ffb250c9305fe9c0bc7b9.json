{"ast":null,"code":"import { GLOBALTYPES, DeleteData } from \"./globalTypes\";\nimport { getDataAPI, patchDataAPI } from \"../../utils/fetchData\";\nimport { imageUpload } from \"../../utils/imageUpload\";\nimport { createNotify, removeNotify } from \"./notifyAction\";\nexport const PROFILE_TYPES = {\n  LOADING: \"LOADING_PROFILE\",\n  GET_USER: \"GET_PROFILE_USER\",\n  FOLLOW: \"FOLLOW\",\n  UNFOLLOW: \"UNFOLLOW\",\n  GET_ID: \"GET_PROFILE_ID\",\n  GET_POSTS: \"GET_PROFILE_POSTS\",\n  UPDATE_POST: \"UPDATE_PROFILE_POSTS\"\n};\nexport const getProfileUsers = ({\n  id,\n  auth\n}) => async dispatch => {\n  dispatch({\n    type: PROFILE_TYPES.GET_ID,\n    payload: id\n  });\n  try {\n    dispatch({\n      type: PROFILE_TYPES.LOADING,\n      payload: true\n    });\n    const res = getDataAPI(`/user/${id}`, auth.token);\n    const res1 = getDataAPI(`/user_posts/${id}`, auth.token);\n    const users = await res;\n    const posts = await res1;\n    dispatch({\n      type: PROFILE_TYPES.GET_USER,\n      payload: users.data\n    });\n    dispatch({\n      type: PROFILE_TYPES.GET_POSTS,\n      payload: {\n        ...posts.data,\n        _id: id,\n        page: 2\n      }\n    });\n    dispatch({\n      type: PROFILE_TYPES.LOADING,\n      payload: false\n    });\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const updateProfileUser = ({\n  userData,\n  avatar,\n  auth\n}) => async dispatch => {\n  if (!userData.fullname) {\n    return dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: \"Please enter full name.\"\n      }\n    });\n  }\n  if (userData.fullname.length > 25) {\n    return dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: \"Full name is too long.\"\n      }\n    });\n  }\n  if (userData.story.length > 200) {\n    return dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: \"Story is too long.\"\n      }\n    });\n  }\n  try {\n    let media;\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        loading: true\n      }\n    });\n    if (avatar) {\n      media = await imageUpload([avatar]);\n    }\n    const res = await patchDataAPI(\"user\", {\n      ...userData,\n      avatar: avatar ? media[0].url : auth.user.avatar\n    }, auth.token);\n    dispatch({\n      type: GLOBALTYPES.AUTH,\n      payload: {\n        ...auth,\n        user: {\n          ...auth.user,\n          ...userData,\n          avatar: avatar ? media[0].url : auth.user.avatar\n        }\n      }\n    });\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        success: res.data.msg\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const follow = ({\n  users,\n  user,\n  auth,\n  socket\n}) => async dispatch => {\n  let newUser;\n  if (users.every(item => item._id !== user._id)) {\n    newUser = {\n      ...user,\n      followers: [...user.followers, auth.user]\n    };\n  } else {\n    users.forEach(item => {\n      if (item._id === user._id) {\n        newUser = {\n          ...item,\n          followers: [...item.followers, auth.user]\n        };\n      }\n    });\n  }\n  dispatch({\n    type: PROFILE_TYPES.FOLLOW,\n    payload: newUser\n  });\n  dispatch({\n    type: GLOBALTYPES.AUTH,\n    payload: {\n      ...auth,\n      user: {\n        ...auth.user,\n        following: [...auth.user.following, newUser]\n      }\n    }\n  });\n  try {\n    const res = await patchDataAPI(`/user/${user._id}/follow`, null, auth.token);\n    // todo socket\n    socket.emit(\"follow\", res.data.newUser);\n\n    // todo notification\n    const msg = {\n      id: auth.user._id,\n      text: 'started following you',\n      recipients: [newUser._id],\n      url: `/profile/${auth.user._id}`\n    };\n    dispatch(createNotify({\n      msg,\n      auth,\n      socket\n    }));\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};\nexport const unfollow = ({\n  users,\n  user,\n  auth,\n  socket\n}) => async dispatch => {\n  let newUser;\n  if (users.every(item => item._id !== user._id)) {\n    newUser = {\n      ...user,\n      followers: DeleteData(user.followers, auth.user._id)\n    };\n  } else {\n    users.forEach(item => {\n      if (item._id === user._id) {\n        newUser = {\n          ...item,\n          followers: DeleteData(item.followers, auth.user._id)\n        };\n      }\n    });\n  }\n  dispatch({\n    type: PROFILE_TYPES.UNFOLLOW,\n    payload: newUser\n  });\n  dispatch({\n    type: GLOBALTYPES.AUTH,\n    payload: {\n      ...auth,\n      user: {\n        ...auth.user,\n        following: DeleteData(auth.user.following, newUser._id)\n      }\n    }\n  });\n  try {\n    const res = await patchDataAPI(`/user/${user._id}/unfollow`, null, auth.token);\n\n    // todo socket\n    socket.emit(\"unFollow\", res.data.newUser);\n\n    // todo notification\n    const msg = {\n      id: auth.user._id,\n      text: \"started following you\",\n      recipients: [newUser._id],\n      url: `/profile/${auth.user._id}`\n    };\n    dispatch(removeNotify({\n      msg,\n      auth,\n      socket\n    }));\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: {\n        error: err.response.data.msg\n      }\n    });\n  }\n};","map":{"version":3,"names":["GLOBALTYPES","DeleteData","getDataAPI","patchDataAPI","imageUpload","createNotify","removeNotify","PROFILE_TYPES","LOADING","GET_USER","FOLLOW","UNFOLLOW","GET_ID","GET_POSTS","UPDATE_POST","getProfileUsers","id","auth","dispatch","type","payload","res","token","res1","users","posts","data","_id","page","err","ALERT","error","response","msg","updateProfileUser","userData","avatar","fullname","length","story","media","loading","url","user","AUTH","success","follow","socket","newUser","every","item","followers","forEach","following","emit","text","recipients","unfollow"],"sources":["C:/Users/Dell/Desktop/sem3/friends/frontend/src/redux/actions/profileAction.js"],"sourcesContent":["import { GLOBALTYPES, DeleteData } from \"./globalTypes\";\nimport { getDataAPI, patchDataAPI } from \"../../utils/fetchData\";\nimport { imageUpload } from \"../../utils/imageUpload\";\nimport { createNotify, removeNotify } from \"./notifyAction\";\n\nexport const PROFILE_TYPES = {\n  LOADING: \"LOADING_PROFILE\",\n  GET_USER: \"GET_PROFILE_USER\",\n  FOLLOW: \"FOLLOW\",\n  UNFOLLOW: \"UNFOLLOW\",\n  GET_ID: \"GET_PROFILE_ID\",\n  GET_POSTS: \"GET_PROFILE_POSTS\",\n  UPDATE_POST: \"UPDATE_PROFILE_POSTS\",\n\n};\n\n\nexport const getProfileUsers = ({ id, auth}) => async (dispatch) => {\n\n  dispatch({type:PROFILE_TYPES.GET_ID, payload: id})\n\n    try {\n      dispatch({type: PROFILE_TYPES.LOADING, payload:true});\n      const res =  getDataAPI(`/user/${id}`, auth.token);\n      \n      const res1 =  getDataAPI(`/user_posts/${id}`, auth.token);\n\n      const users = await res;\n      const posts = await res1;\n\n      dispatch({ type: PROFILE_TYPES.GET_USER, payload: users.data });\n      dispatch({ type: PROFILE_TYPES.GET_POSTS, payload: {...posts.data, _id: id, page: 2} });\n\n      dispatch({ type: PROFILE_TYPES.LOADING, payload: false });\n      \n    } catch (err) {\n      dispatch({ type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg} });\n    }\n  }\n\n\n\nexport const updateProfileUser = ({userData, avatar, auth}) => async (dispatch) => {\n  if(!userData.fullname){\n    return dispatch({type: GLOBALTYPES.ALERT, payload: {error: \"Please enter full name.\"}})\n  }\n\n  if (userData.fullname.length > 25) {\n    return dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: { error: \"Full name is too long.\" },\n    });\n  }\n\n  if (userData.story.length > 200) {\n    return dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: { error: \"Story is too long.\" },\n    });\n  }\n\n  try {\n    let media;\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: { loading: true }\n    });\n\n    if(avatar){\n      media = await imageUpload([avatar]);\n    }\n\n    const res = await patchDataAPI(\"user\", { ...userData, avatar: avatar ? media[0].url : auth.user.avatar }, auth.token);\n\n    dispatch({\n      type: GLOBALTYPES.AUTH,\n      payload: {\n        ...auth,\n        user: {\n          ...auth.user,\n          ...userData,\n          avatar: avatar ? media[0].url : auth.user.avatar,\n        },\n      },\n    });\n   \n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: { success: res.data.msg },\n    });\n\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: { error: err.response.data.msg },\n    });\n  }\n\n};\n\nexport const follow = ({ users, user, auth, socket }) => async (dispatch) => {\n  let newUser;\n  if(users.every(item => item._id !== user._id )){\n    newUser = { ...user, followers: [...user.followers, auth.user] };\n  }else{\n    users.forEach(item => {\n      if(item._id === user._id){\n        newUser = { ...item, followers: [...item.followers, auth.user] };\n      }\n    })\n  }\n   \n  \n  dispatch({ type: PROFILE_TYPES.FOLLOW, payload: newUser });\n\n  dispatch({ type: GLOBALTYPES.AUTH, payload: { ...auth, user:{...auth.user, following: [...auth.user.following, newUser] } } });\n\n  \n\n  try {\n    const res = await patchDataAPI(\n      `/user/${user._id}/follow`,\n      null,\n      auth.token\n    );\n    // todo socket\n    socket.emit(\"follow\", res.data.newUser);\n\n    // todo notification\n    const msg = {\n      id: auth.user._id,\n      text: 'started following you',\n      recipients: [newUser._id],\n      url: `/profile/${auth.user._id}`,\n    };\n\n    dispatch(createNotify({ msg, auth, socket }));\n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: { error: err.response.data.msg },\n    });\n  }\n};\n\nexport const unfollow = ({ users, user, auth, socket }) => async (dispatch) => {\n\n    let newUser;\n    if (users.every((item) => item._id !== user._id)) {\n      newUser = {\n        ...user,\n        followers: DeleteData(user.followers, auth.user._id),\n      };\n    } else {\n      users.forEach((item) => {\n        if (item._id === user._id) {\n          newUser = {\n            ...item,\n            followers: DeleteData(item.followers, auth.user._id),\n          };\n        }\n      });\n    }\n  \n  dispatch({ type: PROFILE_TYPES.UNFOLLOW, payload: newUser });\n\n  dispatch({\n    type: GLOBALTYPES.AUTH,\n    payload: {\n      ...auth,\n      user: {\n        ...auth.user,\n        following: DeleteData(auth.user.following, newUser._id)\n      },\n    },\n  });\n\n  \n\n  try {\n    const res = await patchDataAPI(\n      `/user/${user._id}/unfollow`,\n      null,\n      auth.token\n    );\n\n    // todo socket\n    socket.emit(\"unFollow\", res.data.newUser);\n\n    // todo notification\n    const msg = {\n      id: auth.user._id,\n      text: \"started following you\",\n      recipients: [newUser._id],\n      url: `/profile/${auth.user._id}`,\n    };\n\n    dispatch(removeNotify({ msg, auth, socket }));\n    \n  } catch (err) {\n    dispatch({\n      type: GLOBALTYPES.ALERT,\n      payload: { error: err.response.data.msg },\n    });\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}