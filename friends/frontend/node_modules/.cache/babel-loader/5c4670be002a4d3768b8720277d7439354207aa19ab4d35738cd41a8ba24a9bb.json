{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\sem3\\\\friends\\\\frontend\\\\src\\\\components\\\\home\\\\Status.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Avatar from '../Avatar';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { GLOBALTYPES } from '../../redux/actions/globalTypes';\nimport PremiumAlertModal from './PremiumAlertModal'; // Import your modal component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Status = () => {\n  _s();\n  const {\n    auth\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  // State to control the modal visibility\n  const [showModal, setShowModal] = useState(false);\n  const handleStatusClick = () => {\n    // Check if user is premium before showing the status modal\n    if (auth.user.isPremium) {\n      dispatch({\n        type: GLOBALTYPES.STATUS,\n        payload: true\n      });\n    } else {\n      setShowModal(true); // Show the premium subscription modal if user is not premium\n    }\n  };\n  const handleCloseModal = () => setShowModal(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status my-3 d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outer-shadow big-avatar-cover\",\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          src: auth.user.avatar,\n          size: \"big-avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStatusClick,\n        className: \"btn-1 outer-shadow hover-in-shadow statusBtn flex-fill\",\n        style: {\n          marginLeft: \"7px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            textShadow: \"var(--outer-shadow)\"\n          },\n          children: [auth.user.username, \", What's on your mind?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), showModal && /*#__PURE__*/_jsxDEV(PremiumAlertModal, {\n      closeModal: handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(Status, \"NSN4m/9BeSbNGDDGFHiUXCMojtU=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Status;\nexport default Status;\nvar _c;\n$RefreshReg$(_c, \"Status\");","map":{"version":3,"names":["React","useState","Avatar","useSelector","useDispatch","GLOBALTYPES","PremiumAlertModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Status","_s","auth","state","dispatch","showModal","setShowModal","handleStatusClick","user","isPremium","type","STATUS","payload","handleCloseModal","children","className","src","avatar","size","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","marginLeft","textShadow","username","closeModal","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/sem3/friends/frontend/src/components/home/Status.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Avatar from '../Avatar';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { GLOBALTYPES } from '../../redux/actions/globalTypes';\nimport PremiumAlertModal from './PremiumAlertModal'; // Import your modal component\n\nconst Status = () => {\n    const { auth } = useSelector(state => state);\n    const dispatch = useDispatch();\n    \n    // State to control the modal visibility\n    const [showModal, setShowModal] = useState(false);\n\n    const handleStatusClick = () => {\n        // Check if user is premium before showing the status modal\n        if (auth.user.isPremium) {\n            dispatch({ type: GLOBALTYPES.STATUS, payload: true });\n        } else {\n            setShowModal(true); // Show the premium subscription modal if user is not premium\n        }\n    };\n\n    const handleCloseModal = () => setShowModal(false);\n\n    return (\n        <>\n            <div className=\"status my-3 d-flex\">\n                <div className=\"outer-shadow big-avatar-cover\">\n                    <Avatar src={auth.user.avatar} size=\"big-avatar\" />\n                </div>\n                <button\n                    onClick={handleStatusClick}\n                    className=\"btn-1 outer-shadow hover-in-shadow statusBtn flex-fill\"\n                    style={{ marginLeft: \"7px\" }}\n                >\n                    <span style={{ textShadow: \"var(--outer-shadow)\" }}>\n                        {auth.user.username}, What's on your mind?\n                    </span>\n                </button>\n            </div>\n\n            {/* Render the PremiumAlertModal if showModal is true */}\n            {showModal && (\n                <PremiumAlertModal closeModal={handleCloseModal} />\n            )}\n        </>\n    );\n}\n\nexport default Status;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,WAAW;AAC9B,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAQ,iCAAiC;AAC7D,OAAOC,iBAAiB,MAAM,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM;IAAEC;EAAK,CAAC,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAAC;EAC5C,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMiB,iBAAiB,GAAGA,CAAA,KAAM;IAC5B;IACA,IAAIL,IAAI,CAACM,IAAI,CAACC,SAAS,EAAE;MACrBL,QAAQ,CAAC;QAAEM,IAAI,EAAEhB,WAAW,CAACiB,MAAM;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC;IACzD,CAAC,MAAM;MACHN,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;IACxB;EACJ,CAAC;EAED,MAAMO,gBAAgB,GAAGA,CAAA,KAAMP,YAAY,CAAC,KAAK,CAAC;EAElD,oBACIT,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACIjB,OAAA;MAAKkB,SAAS,EAAC,oBAAoB;MAAAD,QAAA,gBAC/BjB,OAAA;QAAKkB,SAAS,EAAC,+BAA+B;QAAAD,QAAA,eAC1CjB,OAAA,CAACN,MAAM;UAACyB,GAAG,EAAEd,IAAI,CAACM,IAAI,CAACS,MAAO;UAACC,IAAI,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACNzB,OAAA;QACI0B,OAAO,EAAEhB,iBAAkB;QAC3BQ,SAAS,EAAC,wDAAwD;QAClES,KAAK,EAAE;UAAEC,UAAU,EAAE;QAAM,CAAE;QAAAX,QAAA,eAE7BjB,OAAA;UAAM2B,KAAK,EAAE;YAAEE,UAAU,EAAE;UAAsB,CAAE;UAAAZ,QAAA,GAC9CZ,IAAI,CAACM,IAAI,CAACmB,QAAQ,EAAC,wBACxB;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,EAGLjB,SAAS,iBACNR,OAAA,CAACF,iBAAiB;MAACiC,UAAU,EAAEf;IAAiB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACrD;EAAA,eACH,CAAC;AAEX,CAAC;AAAArB,EAAA,CAzCKD,MAAM;EAAA,QACSR,WAAW,EACXC,WAAW;AAAA;AAAAoC,EAAA,GAF1B7B,MAAM;AA2CZ,eAAeA,MAAM;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}